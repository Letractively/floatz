#summary Describes how to layout a page [under construction]
Last Update: March 7th, 2010

*This page is currently under construction and thus not finished.*

   ----
   Note: this wiki page already covers the new version 1.1.0 that's currently in beta stadium.
   ----

<wiki:toc max_depth="2" />

=Creating a page=
First of all we use the empty layout template from `/floatz.dev.kit-1.1.0/templates/layout.empty` as as starting point. For that we copy all its content into a separate working folder (e.g. into `C:\MyProject`). Now we have an empty page template where we can easily start from.

{{{
   <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
   <html xmlns="http://www.w3.org/1999/xhtml" >
      <head>
         <title>floatz - Layout.Empty</title>
         <meta http-equiv="content-type" content="text/html; CHARSET=iso-8859-1" />
         <meta http-equiv="content-script-type" content="text/javascript" />
         <meta http-equiv="content-style-type" content="text/css" />
         <meta http-equiv="content-language" content="en" />
         <meta name="author" content="" />
         <meta name="robots" content="index,follow" />
         <meta name="description" content="" />
         <link rel="stylesheet" type="text/css" href="styles/project.css" />
         <script type="text/javascript" src="styles/floatz.1.1.0/scripts/jquery-1.4.1.min.js"></script>
         <script type="text/javascript" src="styles/floatz.1.1.0/scripts/floatz.js"></script>
         <script type="text/javascript" src="scripts/project.js"></script>
      </head>
      <body>
         <!-- page -->
         <div id="flz_page">
         </div>
      </body>
   </html>   
}}}

=Defining the base layout=
In this sample we will create a page with the following elements: header, menu, submenu, content and footer. To achive this, create a box for every page element. A box is represented as a `DIV` tag, decorated with a CSS class named `flz_box`.

{{{
   <body>
      <!-- page -->
      <div id="flz_page">
         <div class="flz_box">
            header
         </div>
         <div class="flz_box">
            menu
         </div>
         <div class="flz_box">
            submenu
         </div>
         <div class="flz_box">
            content
         </div>
         <div class="flz_box">
            footer
         </div>
      </div>
   </body>
}}}

When we save and open the page with our browser, we will see that each box is displayed in a separate line. Well, but that is not exactly what we want, especially for the submenu and content box.

==Adding layouters==


{{{
   <body>
      <!-- page -->
      <div id="flz_page">
         <div class="flz_box">
            header
         </div>
         <div class="flz_box">
            menu
         </div>
         <div class="flz_box flz_l20">
            submenu
         </div>
         <div class="flz_box flz_r80">
            content
         </div>
         <div class="flz_box">
            footer
         </div>
      </div>
   </body>
}}}

==Customizing the page elements==

{{{
   /* Loads floatz CSS framework */
   @import url(floatz.1.1.0/floatz.liquid.css);

   /* Project specific styles */
   body {
      background: #efefef;
   }

   .header {
      background-color: #0070c0;
      color: #fff;
   }

   .menu {
      background-color: #eaeaea;
   }

   .submenu {
   }

   .content {
   }

   .footer {
      background-color: #0070c0;
      color: #fff;
   }
}}}

{{{
   <body>
      <!-- page -->
      <div id="flz_page">
         <div class="flz_box header">
            header
         </div>
         <div class="flz_box menu">
            menu
         </div>
         <div class="flz_box flz_l20 submenu">
            submenu
         </div>
         <div class="flz_box flz_r80 content">
            content
         </div>
         <div class="flz_box footer">
            footer
         </div>
      </div>
   </body>
}}}

=Adding whitespace=